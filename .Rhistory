return(tmp)
#if((x[0] <= 1 or x[2] <= 0) and (x[4] <= 1 or x[6] <= 0)):
#return 2*x[7]*x[8]
#if(((x[0] <= 1 or x[2] <= 0) and (x[4] > 1 and x[6] > 0)) or ((x[0] > 1 and x[2] > 0) and (x[4] <= 1 or x[6] <= 0))):
#return 4 + 2*x[7]*x[8]
}
effect1(X)
a
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 & X['x2'] > 0 & X['x4'] > 1 & X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
a[index]
rm(list=ls())
library(tidyr)
library(grf)
n = 10
d = 10
m = 2
############# generate data #############
# X
X = data.frame(matrix(nrow=n, ncol=0))
for(i in seq(0, d-1))
{
if(i%%2 == 0)
{ tmp = data.frame(matrix(rnorm(n, 0, 1), nrow=n)) }
else
{ tmp = data.frame(matrix(rbinom(n, 1, 0.5), nrow=n)) }
X = cbind(X, tmp)
}
names(X)[1:d] <- paste("x", 0:(d-1), sep="")
# Y
Y = data.frame(matrix(nrow=n, ncol= 0))
baseline0 <- function(X) {return(X['x0'] + X['x2'] + X['x4'] + X['x6'] + X['x7'] + X['x8'] - 2)}
baseline1 <- function(X) {return(0)}
effect0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
effect1 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 & X['x2'] > 0 & X['x4'] > 1 & X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
tmp[index] = a[index]
return(tmp)
#if((x[0] <= 1 or x[2] <= 0) and (x[4] <= 1 or x[6] <= 0)):
#return 2*x[7]*x[8]
#if(((x[0] <= 1 or x[2] <= 0) and (x[4] > 1 and x[6] > 0)) or ((x[0] > 1 and x[2] > 0) and (x[4] <= 1 or x[6] <= 0))):
#return 4 + 2*x[7]*x[8]
}
effect1(X)
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 & X['x2'] > 0 & X['x4'] > 1 & X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
View(a)
a[index]
a[index,]
a
a
tmp[index]
tmp
tmp[index,]
tmp[,index]
tmp[index]
tmp[1]
tmp[2]
tmp[1, index]
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 & X['x2'] > 0 & X['x4'] > 1 & X['x6'] > 0)
tmp
tmp = 4
tmp
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 & X['x2'] > 0 & X['x4'] > 1 & X['x6'] > 0)
tmp
tmp[index] = 5
tmp
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
tmp
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 & X['x2'] > 0 & X['x4'] > 1 & X['x6'] > 0)
index
index = with(X, X['x0'] > 0.5)
indx
index
index = with(X, X['x0'] > 1 & X['x2'] > 0 & X['x4'] > 1 & X['x6'] > 0)
index
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
tmp[index] = 1
tmp
index
index = with(X, X['x0'] > 1 & X['x2'] > 0 & X['x4'] > 1 & X['x6'] > 0)
index
index = with(X, X['x0'] > 0.5)
tmp[index] = 8 + 2*X['x7']*X['x8']
tmp
tmp[index] = a[index]
tmp
effect1 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 && X['x2'] > 0 && X['x4'] > 1 && X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] <= 1 || X['x6'] <= 0)))
a = 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] > 1 || X['x6'] > 0)) || ((X['x0'] > 1 || X['x2'] > 0) && (X['x4'] <= 1 || X['x6'] <= 0)) )
a = 4 + 2*X['x7']*X['x8']
tmp[index] = a[index]
}
effect1(X)
effect1 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 && X['x2'] > 0 && X['x4'] > 1 && X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] <= 1 || X['x6'] <= 0)))
a = 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] > 1 || X['x6'] > 0)) || ((X['x0'] > 1 || X['x2'] > 0) && (X['x4'] <= 1 || X['x6'] <= 0)) )
a = 4 + 2*X['x7']*X['x8']
tmp[index] = a[index]
return(tmp)
}
effect1(X)
rm(list=ls())
library(tidyr)
library(grf)
n = 10
d = 10
m = 2
synthetic = True
############# generate data #############
if(synthetic)
{
# X
X = data.frame(matrix(nrow=n, ncol=0))
for(i in seq(0, d-1))
{
if(i%%2 == 0)
{ tmp = data.frame(matrix(rnorm(n, 0, 1), nrow=n)) }
else
{ tmp = data.frame(matrix(rbinom(n, 1, 0.5), nrow=n)) }
X = cbind(X, tmp)
}
names(X)[1:d] <- paste("x", 0:(d-1), sep="")
# Y
Y = data.frame(matrix(nrow=n, ncol= m))
names(Y)[1:m] <- paste("y", 0:(m-1), sep="")
baseline0 <- function(X) {return(X['x0'] + X['x2'] + X['x4'] + X['x6'] + X['x7'] + X['x8'] - 2)}
baseline1 <- function(X) {return(0)}
effect0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
effect1 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 && X['x2'] > 0 && X['x4'] > 1 && X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] <= 1 || X['x6'] <= 0)))
a = 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] > 1 || X['x6'] > 0)) || ((X['x0'] > 1 || X['x2'] > 0) && (X['x4'] <= 1 || X['x6'] <= 0)) )
a = 4 + 2*X['x7']*X['x8']
tmp[index] = a[index]
return(tmp)
}
for(i in seq(0, m-1))
{
if(i == 0)
{ Y['y0'] = sapply(X, baseline0) + 0.5*sapply(X, effect0)}
else
{ Y['y1'] = sapply(X, baseline0) - 0.5*sapply(X, effect0)}
}
}
rm(list=ls())
library(tidyr)
library(grf)
n = 10
d = 10
m = 2
synthetic = True
############# generate data #############
if(synthetic)
{
# X
X = data.frame(matrix(nrow=n, ncol=0))
for(i in seq(0, d-1))
{
if(i%%2 == 0)
{ tmp = data.frame(matrix(rnorm(n, 0, 1), nrow=n)) }
else
{ tmp = data.frame(matrix(rbinom(n, 1, 0.5), nrow=n)) }
X = cbind(X, tmp)
}
names(X)[1:d] <- paste("x", 0:(d-1), sep="")
# Y
Y = data.frame(matrix(nrow=n, ncol= m))
names(Y)[1:m] <- paste("y", 0:(m-1), sep="")
baseline0 <- function(X) {return(X['x0'] + X['x2'] + X['x4'] + X['x6'] + X['x7'] + X['x8'] - 2)}
baseline1 <- function(X) {return(0)}
effect0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
effect1 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 && X['x2'] > 0 && X['x4'] > 1 && X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] <= 1 || X['x6'] <= 0)))
a = 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] > 1 || X['x6'] > 0)) || ((X['x0'] > 1 || X['x2'] > 0) && (X['x4'] <= 1 || X['x6'] <= 0)) )
a = 4 + 2*X['x7']*X['x8']
tmp[index] = a[index]
return(tmp)
}
for(i in seq(0, m-1))
{
if(i == 0)
{ Y['y0'] = sapply(X, baseline0) + 0.5*sapply(X, effect0)}
else
{ Y['y1'] = sapply(X, baseline0) - 0.5*sapply(X, effect0)}
}
# T
W = data.frame(matrix(nrow=n, ncol=0))
for(i in seq(0, m-1))
{
if(i%%2 == 0)
{ tmp = data.frame(matrix(rnorm(n, 0, 1), nrow=n)) }
else
{ tmp = data.frame(matrix(rbinom(n, 1, 0.5), nrow=n)) }
W = cbind(W, tmp)
}
}
rm(list=ls())
library(tidyr)
library(grf)
n = 10
d = 10
m = 2
synthetic = True
############# generate data #############
if(synthetic)
{
# X
X = data.frame(matrix(nrow=n, ncol=0))
for(i in seq(0, d-1))
{
if(i%%2 == 0)
{ tmp = data.frame(matrix(rnorm(n, 0, 1), nrow=n)) }
else
{ tmp = data.frame(matrix(rbinom(n, 1, 0.5), nrow=n)) }
X = cbind(X, tmp)
}
names(X)[1:d] <- paste("x", 0:(d-1), sep="")
# Y
Y = data.frame(matrix(nrow=n, ncol= m))
names(Y)[1:m] <- paste("y", 0:(m-1), sep="")
baseline0 <- function(X) {return(X['x0'] + X['x2'] + X['x4'] + X['x6'] + X['x7'] + X['x8'] - 2)}
baseline1 <- function(X) {return(0)}
effect0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
effect1 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 && X['x2'] > 0 && X['x4'] > 1 && X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] <= 1 || X['x6'] <= 0)))
a = 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] > 1 || X['x6'] > 0)) || ((X['x0'] > 1 || X['x2'] > 0) && (X['x4'] <= 1 || X['x6'] <= 0)) )
a = 4 + 2*X['x7']*X['x8']
tmp[index] = a[index]
return(tmp)
}
for(i in seq(0, m-1))
{
if(i == 0)
{ Y['y0'] = sapply(X, baseline0) + 0.5*sapply(X, effect0)}
else
{ Y['y1'] = sapply(X, baseline0) - 0.5*sapply(X, effect0)}
}
# T
W = data.frame(matrix(nrow=n, ncol=0))
for(i in seq(0, m-1))
{
if(i%%2 == 0)
{ tmp = data.frame(matrix(rnorm(n, 0, 1), nrow=n)) }
else
{ tmp = data.frame(matrix(rbinom(n, 1, 0.5), nrow=n)) }
W = cbind(W, tmp)
}
}
rm(list=ls())
library(tidyr)
library(grf)
n = 10
d = 10
m = 2
synthetic = TRUE
############# generate data #############
if(synthetic)
{
# X
X = data.frame(matrix(nrow=n, ncol=0))
for(i in seq(0, d-1))
{
if(i%%2 == 0)
{ tmp = data.frame(matrix(rnorm(n, 0, 1), nrow=n)) }
else
{ tmp = data.frame(matrix(rbinom(n, 1, 0.5), nrow=n)) }
X = cbind(X, tmp)
}
names(X)[1:d] <- paste("x", 0:(d-1), sep="")
# Y
Y = data.frame(matrix(nrow=n, ncol= m))
names(Y)[1:m] <- paste("y", 0:(m-1), sep="")
baseline0 <- function(X) {return(X['x0'] + X['x2'] + X['x4'] + X['x6'] + X['x7'] + X['x8'] - 2)}
baseline1 <- function(X) {return(0)}
effect0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
effect1 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 && X['x2'] > 0 && X['x4'] > 1 && X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] <= 1 || X['x6'] <= 0)))
a = 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] > 1 || X['x6'] > 0)) || ((X['x0'] > 1 || X['x2'] > 0) && (X['x4'] <= 1 || X['x6'] <= 0)) )
a = 4 + 2*X['x7']*X['x8']
tmp[index] = a[index]
return(tmp)
}
for(i in seq(0, m-1))
{
if(i == 0)
{ Y['y0'] = sapply(X, baseline0) + 0.5*sapply(X, effect0)}
else
{ Y['y1'] = sapply(X, baseline0) - 0.5*sapply(X, effect0)}
}
# T
W = data.frame(matrix(nrow=n, ncol=0))
for(i in seq(0, m-1))
{
if(i%%2 == 0)
{ tmp = data.frame(matrix(rnorm(n, 0, 1), nrow=n)) }
else
{ tmp = data.frame(matrix(rbinom(n, 1, 0.5), nrow=n)) }
W = cbind(W, tmp)
}
}
################## random split #################
########### learn the causal forest #############
tau.forest <- causal_forest(X, Y, W)
############ ############ ############ ##########
View(Y)
View(X)
View(tmp)
View(Y)
# Y
Y = data.frame(matrix(nrow=n, ncol= m))
names(Y)[1:m] <- paste("y", 0:(m-1), sep="")
baseline0 <- function(X) {return(X['x0'] + X['x2'] + X['x4'] + X['x6'] + X['x7'] + X['x8'] - 2)}
baseline1 <- function(X) {return(0)}
effect0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
effect1 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 1 && X['x2'] > 0 && X['x4'] > 1 && X['x6'] > 0)
a = 8 + 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] <= 1 || X['x6'] <= 0)))
a = 2*X['x7']*X['x8']
tmp[index] = a[index]
index = with(X, ((X['x0'] <= 1 || X['x2'] <= 0) && (X['x4'] > 1 || X['x6'] > 0)) || ((X['x0'] > 1 || X['x2'] > 0) && (X['x4'] <= 1 || X['x6'] <= 0)) )
a = 4 + 2*X['x7']*X['x8']
tmp[index] = a[index]
return(tmp)
}
for(i in seq(0, m-1))
{
if(i == 0)
{ Y['y0'] = sapply(X, baseline0) + 0.5*sapply(X, effect0)}
else
{ Y['y1'] = sapply(X, baseline0) - 0.5*sapply(X, effect0)}
}
sapply(X, baseline0) + 0.5*sapply(X, effect0)
baseline0(X)
lapply(X, baseline0)
apply(X, baseline0)
for(i in seq(0, m-1))
{
if(i == 0)
{ Y['y0'] = apply(X, 1, baseline0) + 0.5*apply(X, 1, effect0)}
else
{ Y['y1'] = apply(X, 1, baseline0) - 0.5*apply(X, 1, effect0)}
}
apply(X, 1, baseline0)
0.5*apply(X, 1, effect0)
apply(X, 1, baseline0)
effect0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
apply(X, 1, effect0)
TY['y0']
Y['y0']
effect0 <- function(X)
{
tmp = matrix(nrow=nrow(X), ncol= 1)
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
0.5*apply(X, 1, effect0)
effect0(X)
0.5*effect0(X)
apply(X, 1, baseline0)
baseline0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
tmp = (X['x0'] + X['x2'] + X['x4'] + X['x6'] + X['x7'] + X['x8'] - 2)
return(tmp)
}
{ Y['y0'] = apply(X, 1, baseline0) + 0.5*apply(X, 1, effect0)}
apply(X, 1, baseline0)
baseline0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
tmp = X['x0'] + X['x2'] + X['x4'] + X['x6'] + X['x7'] + X['x8'] - 2
return(tmp)
}
baseline0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
tmp = X['x0'] + X['x2'] + X['x4'] + X['x6'] + X['x7'] + X['x8'] - 2
return(tmp)
}
baseline0(X)
effect0 <- function(X)
{
tmp = data.frame(matrix(nrow=nrow(X), ncol= 1))
index = with(X, X['x0'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
'] > 0.5)
tmp[index] = 5
tmp[!index] = -5
return(tmp)
}
)
